.TH "logic::utility::Random" 3 "Tue Jan 11 2022" "Doxygen Test" \" -*- nroff -*-
.ad l
.nh
.SH NAME
logic::utility::Random
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRandom\fP (const \fBRandom\fP &)=delete"
.br
.ti -1c
.RI "\fBRandom\fP (const \fBRandom\fP &&)=delete"
.br
.ti -1c
.RI "\fBRandom\fP & \fBoperator=\fP (const \fBRandom\fP &)=delete"
.br
.ti -1c
.RI "\fBRandom\fP & \fBoperator=\fP (const \fBRandom\fP &&)=delete"
.br
.ti -1c
.RI "int \fBuniformIntDistribution\fP (int a, int b)"
.br
.ti -1c
.RI "float \fBuniformRealDistribution\fP (float a, float b)"
.br
.ti -1c
.RI "bool \fBbernoulliDistribution\fP (float p)"
.br
.ti -1c
.RI "int \fBbinomialDistribution\fP (float p, int t)"
.br
.ti -1c
.RI "int \fBnegativeBinomialDistribution\fP (float p, int k)"
.br
.ti -1c
.RI "int \fBgeometricDistribution\fP (float p)"
.br
.ti -1c
.RI "int \fBpoissonDistribution\fP (float mean)"
.br
.ti -1c
.RI "float \fBexponentialDistribution\fP (float lambda)"
.br
.ti -1c
.RI "float \fBgammaDistribution\fP (float alpha, float beta)"
.br
.ti -1c
.RI "float \fBweibullDistribution\fP (float a, float b)"
.br
.ti -1c
.RI "float \fBextremeValueDistribution\fP (float a, float b)"
.br
.ti -1c
.RI "float \fBnormalDistribution\fP (float mean, float stddev)"
.br
.ti -1c
.RI "float \fBlognormalDistribution\fP (float m, float s)"
.br
.ti -1c
.RI "float \fBcauchyDistribution\fP (float a, float b)"
.br
.ti -1c
.RI "int \fBdiscreteDistribution\fP (const std::initializer_list< double > &probabilities)"
.br
.ti -1c
.RI "float \fBpiecewiseConstantDistribution\fP (const std::vector< float > &intervals, const std::vector< float > &densities)"
.br
.ti -1c
.RI "float \fBpiecewiseLineairDistribution\fP (const std::vector< float > &intervals, const std::vector< float > &densities)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBRandom\fP & \fBInstance\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 16 of file Random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool logic::utility::Random::bernoulliDistribution (float p)"
@function : uniformRealDistribution Returns a value generated by a bernoulli distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(bool) : true or false\&. 
.RE
.PP

.PP
Definition at line 30 of file Random\&.cpp\&.
.SS "int logic::utility::Random::binomialDistribution (float p, int t)"
@function : binomialDistribution Returns a value generated by a binomial distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP (float) : \&. 
.br
\fIt\fP (int) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : 
.RE
.PP

.PP
Definition at line 36 of file Random\&.cpp\&.
.SS "float logic::utility::Random::cauchyDistribution (float a, float b)"
@function : cauchyDistribution Returns a value generated by a cauchy distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP (float) : \&. 
.br
\fIb\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 96 of file Random\&.cpp\&.
.SS "int logic::utility::Random::discreteDistribution (const std::initializer_list< double > & probabilities)"
@function : discreteDistribution Returns a value generated by a discrete distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIprobabilities\fP (std::initializer_list<double>) : list of probabilities\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : \&. 
.RE
.PP

.PP
Definition at line 102 of file Random\&.cpp\&.
.SS "float logic::utility::Random::exponentialDistribution (float lambda)"
@function : exponentialDistribution Returns a value generated by an exponential distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIlambda\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 60 of file Random\&.cpp\&.
.SS "float logic::utility::Random::extremeValueDistribution (float a, float b)"
@function : extremeValueDistribution Returns a value generated by an extreme value distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP (float) : \&. 
.br
\fIb\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 78 of file Random\&.cpp\&.
.SS "float logic::utility::Random::gammaDistribution (float alpha, float beta)"
@function : gammaDistribution Returns a value generated by a gamma distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIalpha\fP (float) : \&. 
.br
\fIbeta\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 66 of file Random\&.cpp\&.
.SS "int logic::utility::Random::geometricDistribution (float p)"
@function : geometricDistribution Returns a value generated by a geometric distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : \&. 
.RE
.PP

.PP
Definition at line 48 of file Random\&.cpp\&.
.SS "float logic::utility::Random::lognormalDistribution (float m, float s)"
@function : lognormalDistribution Returns a value generated by a lognormal distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIm\fP (float) : \&. 
.br
\fIs\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 90 of file Random\&.cpp\&.
.SS "int logic::utility::Random::negativeBinomialDistribution (float p, int k)"
@function : negativeBinomialDistribution Returns a value generated by a negative binomial distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP (float) : \&. 
.br
\fIt\fP (int) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : \&. 
.RE
.PP

.PP
Definition at line 42 of file Random\&.cpp\&.
.SS "float logic::utility::Random::normalDistribution (float mean, float stddev)"
@function : normalDistribution Returns a value generated by a normal distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fImean\fP (float) : \&. 
.br
\fIstddev\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 84 of file Random\&.cpp\&.
.SS "float logic::utility::Random::piecewiseConstantDistribution (const std::vector< float > & intervals, const std::vector< float > & densities)"
@function : piecewiseConstantDistribution Returns a value generated by a piecewise constant distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIintervals\fP (std::vector<float>) : list of the intervals\&. 
.br
\fIdensities\fP (std::vector<float>) : list of the densities (for the intervals)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : random float from between one of the ranges in the intervals\&. 
.RE
.PP

.PP
Definition at line 108 of file Random\&.cpp\&.
.SS "float logic::utility::Random::piecewiseLineairDistribution (const std::vector< float > & intervals, const std::vector< float > & densities)"
@function : piecewiseLineairDistribution Returns a value generated by a piecewise lineair distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIintervals\fP (std::vector<float>) : list of the intervals\&. 
.br
\fIdensities\fP (std::vector<float>) : list of the densities (for the intervals)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : random float from between one of the ranges in the intervals\&. 
.RE
.PP

.PP
Definition at line 115 of file Random\&.cpp\&.
.SS "int logic::utility::Random::poissonDistribution (float mean)"
@function : poissonDistribution Returns a value generated by a poisson distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fImean\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : \&. 
.RE
.PP

.PP
Definition at line 54 of file Random\&.cpp\&.
.SS "int logic::utility::Random::uniformIntDistribution (int a, int b)"
@function : uniformIntDistribution Returns a value generated by a uniform integer distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP (int) : left range\&. 
.br
\fIb\fP (int) : right range\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(int) : random integer in the range between a and b\&. 
.RE
.PP

.PP
Definition at line 18 of file Random\&.cpp\&.
.SS "float logic::utility::Random::uniformRealDistribution (float a, float b)"
@function : uniformRealDistribution Returns a value generated by a uniform real distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP (float) : left range\&. 
.br
\fIb\fP (float) : right range\&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : random float in the range between a and b\&. 
.RE
.PP

.PP
Definition at line 24 of file Random\&.cpp\&.
.SS "float logic::utility::Random::weibullDistribution (float a, float b)"
@function : weibullDistribution Returns a value generated by a weibull distribution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP (float) : \&. 
.br
\fIb\fP (float) : \&. 
.RE
.PP
\fBReturns\fP
.RS 4
(float) : \&. 
.RE
.PP

.PP
Definition at line 72 of file Random\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Doxygen Test from the source code\&.
