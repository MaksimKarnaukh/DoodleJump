<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrepresentation_1_1Game" kind="class" language="C++" prot="public">
    <compoundname>representation::Game</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a8ae744efdb720f6e6ccf1e1cdcbc15cb" prot="private" static="no" mutable="no">
        <type>sf::Font</type>
        <definition>sf::Font representation::Game::font1</definition>
        <argsstring></argsstring>
        <name>font1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="18" column="18" bodyfile="src/game_representation/Game.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a3f637e139a73494eb69d979eeef3844a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string representation::Game::fontFile</definition>
        <argsstring></argsstring>
        <name>fontFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="19" column="21" bodyfile="src/game_representation/Game.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a357c11913d653a1591bce632e908050c" prot="private" static="no" mutable="no">
        <type>sf::Text</type>
        <definition>sf::Text representation::Game::scoreText</definition>
        <argsstring></argsstring>
        <name>scoreText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="21" column="18" bodyfile="src/game_representation/Game.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a15d757ec6886cefcd674e6253330c88f" prot="private" static="no" mutable="no">
        <type>sf::Text</type>
        <definition>sf::Text representation::Game::menuText</definition>
        <argsstring></argsstring>
        <name>menuText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="22" column="18" bodyfile="src/game_representation/Game.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1ada3da3d51eeca8c0d3c4ffa3637c4e8c" prot="private" static="no" mutable="no">
        <type>sf::Text</type>
        <definition>sf::Text representation::Game::menuText0</definition>
        <argsstring></argsstring>
        <name>menuText0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="23" column="18" bodyfile="src/game_representation/Game.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1ae8cb6aefcf844982e720b211d9eae15a" prot="private" static="no" mutable="no">
        <type>sf::Text</type>
        <definition>sf::Text representation::Game::currentHighScore</definition>
        <argsstring></argsstring>
        <name>currentHighScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="24" column="18" bodyfile="src/game_representation/Game.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1ae58c4f7373e87ab89e6528c439a9fdb5" prot="private" static="no" mutable="no">
        <type>sf::Text</type>
        <definition>sf::Text representation::Game::allTimeHighScore</definition>
        <argsstring></argsstring>
        <name>allTimeHighScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="25" column="18" bodyfile="src/game_representation/Game.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1aa1fb9e9b5e24fb2a811526b09f809095" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int representation::Game::_currentScore</definition>
        <argsstring></argsstring>
        <name>_currentScore</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="27" column="13" bodyfile="src/game_representation/Game.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a65cc93d9b8382d1320a1650823072d12" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int representation::Game::_allTimeHighScore</definition>
        <argsstring></argsstring>
        <name>_allTimeHighScore</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="28" column="13" bodyfile="src/game_representation/Game.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1adee0650227fd0ca449d045bf18620be9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int representation::Game::gameState</definition>
        <argsstring></argsstring>
        <name>gameState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="30" column="13" bodyfile="src/game_representation/Game.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a876e3000bebb45f4f96d76c130b611d2" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float representation::Game::frameRate</definition>
        <argsstring></argsstring>
        <name>frameRate</name>
        <initializer>= 60.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="32" column="15" bodyfile="src/game_representation/Game.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a9b7254abf72ab7ff7315a521430d626f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classlogic_1_1World" kindref="compound">logic::World</ref> &gt;</type>
        <definition>std::unique_ptr&lt;logic::World&gt; representation::Game::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="34" column="25" bodyfile="src/game_representation/Game.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1a33c65567f2617056469c17ba21828b84" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classlogic_1_1AbstractFactory" kindref="compound">logic::AbstractFactory</ref> &gt;</type>
        <definition>std::shared_ptr&lt;logic::AbstractFactory&gt; representation::Game::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="36" column="25" bodyfile="src/game_representation/Game.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrepresentation_1_1Game_1addc67e30936ff9cff27dfa18ce9b2677" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrepresentation_1_1ConcreteFactory" kindref="compound">representation::ConcreteFactory</ref> &gt;</type>
        <definition>std::shared_ptr&lt;representation::ConcreteFactory&gt; representation::Game::cFactory</definition>
        <argsstring></argsstring>
        <name>cFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="37" column="25" bodyfile="src/game_representation/Game.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrepresentation_1_1Game_1a7889375f7112234007bb9ba75be750d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>representation::Game::Game</definition>
        <argsstring>()</argsstring>
        <name>Game</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : <ref refid="classrepresentation_1_1Game" kindref="compound">Game</ref> Constructor for a <ref refid="classrepresentation_1_1Game" kindref="compound">Game</ref> (the window is made here). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="44" column="9" bodyfile="src/game_representation/Game.cpp" bodystart="8" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1aec0583c96de8be0b5b5c59eb66a434d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>representation::Game::~Game</definition>
        <argsstring>()</argsstring>
        <name>~Game</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : <ref refid="classrepresentation_1_1Game" kindref="compound">Game</ref> Destructor for a <ref refid="classrepresentation_1_1Game" kindref="compound">Game</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="50" column="9" bodyfile="src/game_representation/Game.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1adccf8d0e3a0b2257eaeda34cc934ff53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::HandleInput</definition>
        <argsstring>()</argsstring>
        <name>HandleInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : HandleInput Checks for user input on the keyboard and passes this to the world. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="56" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="42" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a71a55fe103e2fdc3cec220d24bf95343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : Update Updates the window events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="62" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1aee4b5192fbdfea96b67872533080fac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::Render</definition>
        <argsstring>()</argsstring>
        <name>Render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : Render Takes care of drawing all our entities on the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="68" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="29" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrepresentation_1_1Window" kindref="compound">Window</ref> &amp;</type>
        <definition>Window &amp; representation::Game::GetWindow</definition>
        <argsstring>()</argsstring>
        <name>GetWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : GetWindow Returns the window instance. <simplesect kind="return"><para>(<ref refid="classrepresentation_1_1Window" kindref="compound">Window</ref>) : window instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="75" column="16" bodyfile="src/game_representation/Game.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1ab2257f0707b7c49d7c48ecf8c8fd1580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::runGameLoop</definition>
        <argsstring>()</argsstring>
        <name>runGameLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : runGameLoop Runs the top-level program loop, which alternates between the different states of our game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="81" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="60" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1abb2e64d484ca4e81e8f74505b5dfd2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::playMenu</definition>
        <argsstring>()</argsstring>
        <name>playMenu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : playMenu Responsible for showing the menu screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="87" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="78" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a99a4bb7b3e86e94fd35193ead50b9b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::playGame</definition>
        <argsstring>()</argsstring>
        <name>playGame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : playGame Runs the actual Doodle Jump game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="93" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="107" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1ad8f5d32a839f06eaf5e6532a7b939415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::loadFonts</definition>
        <argsstring>()</argsstring>
        <name>loadFonts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : loadFonts All necessary fonts are loaded in here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="99" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="141" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1ac8d745da320414774a6d06a6da05299e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::createTexts</definition>
        <argsstring>()</argsstring>
        <name>createTexts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : createTexts All necessary text items are created here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="105" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="153" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1afdd28c211aa02574bb5ed16384f56c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::calculateHighScore</definition>
        <argsstring>()</argsstring>
        <name>calculateHighScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : calculateHighScore Calculates the previous and all-time high-score. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="139" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1aa34f2390947b803ad5e29c95cb69e791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::drawBGTiles</definition>
        <argsstring>()</argsstring>
        <name>drawBGTiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : drawBGTiles Draws the background tiles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="145" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1aa5f23176af501fce8b510fbffc6fca9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::drawPlatforms</definition>
        <argsstring>()</argsstring>
        <name>drawPlatforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : drawPlatforms Draws the platforms. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="151" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="212" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a0ded73c02cb88f6d0591050fc8cf487b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::drawBonusses</definition>
        <argsstring>()</argsstring>
        <name>drawBonusses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : drawBonusses Draws the bonusses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="157" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="224" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1ae754be8869dc1dd1336f81e256e67992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::drawScore</definition>
        <argsstring>()</argsstring>
        <name>drawScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : drawScore Draws the score. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="163" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a12fad4e83aee259670813a7673f51065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::drawPlayer</definition>
        <argsstring>()</argsstring>
        <name>drawPlayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : drawPlayer Draws the player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="169" column="14" bodyfile="src/game_representation/Game.cpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1aed0b085f771b532ae1dfa17289a6a523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::setFrameRate</definition>
        <argsstring>(float fps)</argsstring>
        <name>setFrameRate</name>
        <param>
          <type>float</type>
          <declname>fps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : setFrameRate Setter for the framerate data member. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fps</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) : frames per second. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="177" column="14" bodyfile="src/game_representation/Game.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a46c53a159c1075e06f72efacfaa7da10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float representation::Game::getFrameRate</definition>
        <argsstring>() const</argsstring>
        <name>getFrameRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : getFrameRate Getter for the framerate data member. <simplesect kind="return"><para>(float) : framerate data member (frames per second). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="184" column="15" bodyfile="src/game_representation/Game.h" bodystart="184" bodyend="184"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::createSingleText</definition>
        <argsstring>(sf::Text &amp;_text, const sf::Font &amp;_font, int charSize, sf::Color fillColor, sf::Color outlineColor, float outlineThickness, std::pair&lt; float, float &gt; pos, const std::string &amp;str)</argsstring>
        <name>createSingleText</name>
        <param>
          <type>sf::Text &amp;</type>
          <declname>_text</declname>
        </param>
        <param>
          <type>const sf::Font &amp;</type>
          <declname>_font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>charSize</declname>
        </param>
        <param>
          <type>sf::Color</type>
          <declname>fillColor</declname>
        </param>
        <param>
          <type>sf::Color</type>
          <declname>outlineColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>outlineThickness</declname>
        </param>
        <param>
          <type>std::pair&lt; float, float &gt;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : createSingleText Assigns the esthetics to a single text item. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_text</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Text) : text item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_font</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Font) : font that is applied to the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charSize</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) : character size of our text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fillColor</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Color) : text color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outlineColor</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Color) : outline color of our text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outlineThickness</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) : outline thickness. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::pair&lt;float,float&gt;) : position of the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::string) : the string that the text represents. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="119" column="21" bodyfile="src/game_representation/Game.cpp" bodystart="169" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classrepresentation_1_1Game_1a6fcf39bf44601ac3bff978ea29428243" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void representation::Game::createSingleText</definition>
        <argsstring>(sf::Text &amp;_text, const sf::Font &amp;_font, int charSize, std::pair&lt; float, float &gt; pos, const std::string &amp;str)</argsstring>
        <name>createSingleText</name>
        <param>
          <type>sf::Text &amp;</type>
          <declname>_text</declname>
        </param>
        <param>
          <type>const sf::Font &amp;</type>
          <declname>_font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>charSize</declname>
        </param>
        <param>
          <type>std::pair&lt; float, float &gt;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : createSingleText Assigns the esthetics to a single text item. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_text</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Text) : text item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_font</parametername>
</parameternamelist>
<parameterdescription>
<para>(sf::Font) : font that is applied to the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charSize</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) : character size of our text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::pair&lt;float,float&gt;) : position of the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::string) : the string that the text represents. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/game_representation/Game.h" line="132" column="21" bodyfile="src/game_representation/Game.cpp" bodystart="185" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/game_representation/Game.h" line="16" column="1" bodyfile="src/game_representation/Game.h" bodystart="15" bodyend="185"/>
    <listofallmembers>
      <member refid="classrepresentation_1_1Game_1a65cc93d9b8382d1320a1650823072d12" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>_allTimeHighScore</name></member>
      <member refid="classrepresentation_1_1Game_1aa1fb9e9b5e24fb2a811526b09f809095" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>_currentScore</name></member>
      <member refid="classrepresentation_1_1Game_1ae58c4f7373e87ab89e6528c439a9fdb5" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>allTimeHighScore</name></member>
      <member refid="classrepresentation_1_1Game_1afdd28c211aa02574bb5ed16384f56c1b" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>calculateHighScore</name></member>
      <member refid="classrepresentation_1_1Game_1addc67e30936ff9cff27dfa18ce9b2677" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>cFactory</name></member>
      <member refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>createSingleText</name></member>
      <member refid="classrepresentation_1_1Game_1a6fcf39bf44601ac3bff978ea29428243" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>createSingleText</name></member>
      <member refid="classrepresentation_1_1Game_1ac8d745da320414774a6d06a6da05299e" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>createTexts</name></member>
      <member refid="classrepresentation_1_1Game_1ae8cb6aefcf844982e720b211d9eae15a" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>currentHighScore</name></member>
      <member refid="classrepresentation_1_1Game_1aa34f2390947b803ad5e29c95cb69e791" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>drawBGTiles</name></member>
      <member refid="classrepresentation_1_1Game_1a0ded73c02cb88f6d0591050fc8cf487b" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>drawBonusses</name></member>
      <member refid="classrepresentation_1_1Game_1aa5f23176af501fce8b510fbffc6fca9c" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>drawPlatforms</name></member>
      <member refid="classrepresentation_1_1Game_1a12fad4e83aee259670813a7673f51065" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>drawPlayer</name></member>
      <member refid="classrepresentation_1_1Game_1ae754be8869dc1dd1336f81e256e67992" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>drawScore</name></member>
      <member refid="classrepresentation_1_1Game_1a33c65567f2617056469c17ba21828b84" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>factory</name></member>
      <member refid="classrepresentation_1_1Game_1a8ae744efdb720f6e6ccf1e1cdcbc15cb" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>font1</name></member>
      <member refid="classrepresentation_1_1Game_1a3f637e139a73494eb69d979eeef3844a" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>fontFile</name></member>
      <member refid="classrepresentation_1_1Game_1a876e3000bebb45f4f96d76c130b611d2" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>frameRate</name></member>
      <member refid="classrepresentation_1_1Game_1a7889375f7112234007bb9ba75be750d8" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>Game</name></member>
      <member refid="classrepresentation_1_1Game_1adee0650227fd0ca449d045bf18620be9" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>gameState</name></member>
      <member refid="classrepresentation_1_1Game_1a46c53a159c1075e06f72efacfaa7da10" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>getFrameRate</name></member>
      <member refid="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>GetWindow</name></member>
      <member refid="classrepresentation_1_1Game_1adccf8d0e3a0b2257eaeda34cc934ff53" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>HandleInput</name></member>
      <member refid="classrepresentation_1_1Game_1ad8f5d32a839f06eaf5e6532a7b939415" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>loadFonts</name></member>
      <member refid="classrepresentation_1_1Game_1a15d757ec6886cefcd674e6253330c88f" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>menuText</name></member>
      <member refid="classrepresentation_1_1Game_1ada3da3d51eeca8c0d3c4ffa3637c4e8c" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>menuText0</name></member>
      <member refid="classrepresentation_1_1Game_1a99a4bb7b3e86e94fd35193ead50b9b15" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>playGame</name></member>
      <member refid="classrepresentation_1_1Game_1abb2e64d484ca4e81e8f74505b5dfd2b9" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>playMenu</name></member>
      <member refid="classrepresentation_1_1Game_1aee4b5192fbdfea96b67872533080fac5" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>Render</name></member>
      <member refid="classrepresentation_1_1Game_1ab2257f0707b7c49d7c48ecf8c8fd1580" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>runGameLoop</name></member>
      <member refid="classrepresentation_1_1Game_1a357c11913d653a1591bce632e908050c" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>scoreText</name></member>
      <member refid="classrepresentation_1_1Game_1aed0b085f771b532ae1dfa17289a6a523" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>setFrameRate</name></member>
      <member refid="classrepresentation_1_1Game_1a71a55fe103e2fdc3cec220d24bf95343" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>Update</name></member>
      <member refid="classrepresentation_1_1Game_1a9b7254abf72ab7ff7315a521430d626f" prot="private" virt="non-virtual"><scope>representation::Game</scope><name>world</name></member>
      <member refid="classrepresentation_1_1Game_1aec0583c96de8be0b5b5c59eb66a434d0" prot="public" virt="non-virtual"><scope>representation::Game</scope><name>~Game</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
