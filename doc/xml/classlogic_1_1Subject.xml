<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlogic_1_1Subject" kind="class" language="C++" prot="public">
    <compoundname>logic::Subject</compoundname>
    <derivedcompoundref refid="classlogic_1_1EntityModel" prot="public" virt="non-virtual">logic::EntityModel</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlogic_1_1Subject_1a2c82c974d7838157824bdcecc4d0e59b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Observer&gt; &gt; logic::Subject::observers</definition>
        <argsstring></argsstring>
        <name>observers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="20" column="21" bodyfile="src/logic_library/Subject.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlogic_1_1Subject_1ae1277f400422f50b425c204b11dd8995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>logic::Subject::Subject</definition>
        <argsstring>()</argsstring>
        <name>Subject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : <ref refid="classlogic_1_1Subject" kindref="compound">Subject</ref> Constructor for a <ref refid="classlogic_1_1Subject" kindref="compound">Subject</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="27" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1ae4238075ca667706bba792bfb96ee6c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual logic::Subject::~Subject</definition>
        <argsstring>()=default</argsstring>
        <name>~Subject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : <ref refid="classlogic_1_1Subject" kindref="compound">Subject</ref> Destructor for a <ref refid="classlogic_1_1Subject" kindref="compound">Subject</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="33" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a375e972ed74af83f46a8debd49f2e3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::registerObserver</definition>
        <argsstring>(const std::shared_ptr&lt; Observer &gt; &amp;observer)</argsstring>
        <name>registerObserver</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : registerObserver Adds an observer to the list of observers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::shared_ptr&lt;Observer&gt;) : observer that we want to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="40" column="14" bodyfile="src/logic_library/Subject.cpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a5a3db9e4c842eb2828c5586be9f4cf81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::removeObserver</definition>
        <argsstring>(const std::shared_ptr&lt; Observer &gt; &amp;observer)</argsstring>
        <name>removeObserver</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : removeObserver Removes the observer from the list of observers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>(std::shared_ptr&lt;Observer&gt;) : observer that we want to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="47" column="14" bodyfile="src/logic_library/Subject.cpp" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a33567537c69863eaff2279f398f80ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logic::Subject::notifyObservers</definition>
        <argsstring>()</argsstring>
        <name>notifyObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : notifyObservers Updates each observer in the list of observers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="53" column="14" bodyfile="src/logic_library/Subject.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classlogic_1_1Subject_1a202f1cd7a6af78750886d0b60d388450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classlogic_1_1Observer" kindref="compound">Observer</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Observer &gt; &gt; logic::Subject::getObservers</definition>
        <argsstring>()</argsstring>
        <name>getObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@function : getObservers Returns the list of observers. <simplesect kind="return"><para>(std::vector&lt;std::shared_ptr&lt;Observer&gt;&gt;) : list of observers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logic_library/Subject.h" line="60" column="21" bodyfile="src/logic_library/Subject.cpp" bodystart="33" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>logic::Bonus</label>
        <link refid="classlogic_1_1Bonus"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>logic::Subject</label>
        <link refid="classlogic_1_1Subject"/>
      </node>
      <node id="2">
        <label>logic::EntityModel</label>
        <link refid="classlogic_1_1EntityModel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>logic::Jetpack</label>
        <link refid="classlogic_1_1Jetpack"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>logic::Platform_Vertical</label>
        <link refid="classlogic_1_1Platform__Vertical"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>logic::Platform_Static</label>
        <link refid="classlogic_1_1Platform__Static"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>logic::Platform_Horizontal</label>
        <link refid="classlogic_1_1Platform__Horizontal"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>logic::Platform_Temporary</label>
        <link refid="classlogic_1_1Platform__Temporary"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>logic::Platform</label>
        <link refid="classlogic_1_1Platform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>logic::Player</label>
        <link refid="classlogic_1_1Player"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>logic::Spring</label>
        <link refid="classlogic_1_1Spring"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>logic::BGTile</label>
        <link refid="classlogic_1_1BGTile"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/logic_library/Subject.h" line="17" column="1" bodyfile="src/logic_library/Subject.h" bodystart="16" bodyend="61"/>
    <listofallmembers>
      <member refid="classlogic_1_1Subject_1a202f1cd7a6af78750886d0b60d388450" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>getObservers</name></member>
      <member refid="classlogic_1_1Subject_1a33567537c69863eaff2279f398f80ab4" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>notifyObservers</name></member>
      <member refid="classlogic_1_1Subject_1a2c82c974d7838157824bdcecc4d0e59b" prot="protected" virt="non-virtual"><scope>logic::Subject</scope><name>observers</name></member>
      <member refid="classlogic_1_1Subject_1a375e972ed74af83f46a8debd49f2e3e0" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>registerObserver</name></member>
      <member refid="classlogic_1_1Subject_1a5a3db9e4c842eb2828c5586be9f4cf81" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>removeObserver</name></member>
      <member refid="classlogic_1_1Subject_1ae1277f400422f50b425c204b11dd8995" prot="public" virt="non-virtual"><scope>logic::Subject</scope><name>Subject</name></member>
      <member refid="classlogic_1_1Subject_1ae4238075ca667706bba792bfb96ee6c0" prot="public" virt="virtual"><scope>logic::Subject</scope><name>~Subject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
