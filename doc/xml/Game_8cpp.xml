<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Game_8cpp" kind="file" language="C++">
    <compoundname>Game.cpp</compoundname>
    <includes refid="Game_8h" local="yes">Game.h</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="10">
        <label>AbstractFactory.h</label>
        <link refid="AbstractFactory_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="18">
        <label>Player.h</label>
        <link refid="Player_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/game_representation/Game.cpp</label>
        <link refid="Game_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>BGTile.h</label>
        <link refid="BGTile_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>EntityModel.h</label>
        <link refid="EntityModel_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Platform_Temporary.h</label>
        <link refid="Platform__Temporary_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="41">
        <label>Jetpack_GR.h</label>
        <link refid="Jetpack__GR_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="28">
        <label>Camera.h</label>
        <link refid="Camera_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>map</label>
      </node>
      <node id="17">
        <label>Bonus.h</label>
        <link refid="Bonus_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Platform_Horizontal.h</label>
        <link refid="Platform__Horizontal_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Window.h</label>
        <link refid="Window_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Platform_GR.h</label>
        <link refid="Platform__GR_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>exception</label>
      </node>
      <node id="13">
        <label>Subject.h</label>
        <link refid="Subject_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Platform_Static_GR.h</label>
        <link refid="Platform__Static__GR_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Observer.h</label>
        <link refid="Observer_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>BGTile_GR.h</label>
        <link refid="BGTile__GR_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Bonus_GR.h</label>
        <link refid="Bonus__GR_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Score.h</label>
        <link refid="Score_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Platform_Static.h</label>
        <link refid="Platform__Static_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Platform_Vertical_GR.h</label>
        <link refid="Platform__Vertical__GR_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Platform_Vertical.h</label>
        <link refid="Platform__Vertical_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../logic_library/World.h</label>
        <link refid="World_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Spring_GR.h</label>
        <link refid="Spring__GR_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>random</label>
      </node>
      <node id="39">
        <label>SFML/Window.hpp</label>
      </node>
      <node id="21">
        <label>Platform.h</label>
        <link refid="Platform_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../LoadFileException.h</label>
        <link refid="LoadFileException_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="48">
        <label>Player_GR.h</label>
        <link refid="Player__GR_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Spring.h</label>
        <link refid="Spring_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utility</label>
      </node>
      <node id="43">
        <label>Platform_Horizontal_GR.h</label>
        <link refid="Platform__Horizontal__GR_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Jetpack.h</label>
        <link refid="Jetpack_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>deque</label>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="40">
        <label>thread</label>
      </node>
      <node id="46">
        <label>Platform_Temporary_GR.h</label>
        <link refid="Platform__Temporary__GR_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Random.h</label>
        <link refid="Random_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../logic_library/Stopwatch.h</label>
        <link refid="Stopwatch_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Game.h</label>
        <link refid="Game_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ConcreteFactory.h</label>
        <link refid="ConcreteFactory_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>EntityView.h</label>
        <link refid="EntityView_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerepresentation">representation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Author:<sp/>Maksim<sp/>Karnaukh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Game.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">representation<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classrepresentation_1_1Game_1a7889375f7112234007bb9ba75be750d8" refkind="member"><highlight class="normal"><ref refid="classrepresentation_1_1Game_1a7889375f7112234007bb9ba75be750d8" kindref="member">Game::Game</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Window" kindref="compound">representation::Window</ref>&amp;<sp/>m_window<sp/>=<sp/>representation::Window::Instance();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_window.<ref refid="classrepresentation_1_1Window_1a98906693a2a1428e03c2631ca1bdad2f" kindref="member">Setup</ref>(</highlight><highlight class="stringliteral">&quot;Doodle<sp/>Jump&quot;</highlight><highlight class="normal">,<sp/>sf::Vector2u(640,<sp/>960));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic::utility::Stopwatch::Instance();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameState<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;../assets/Fonts/Bodo_Amat.ttf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classrepresentation_1_1Game_1aec0583c96de8be0b5b5c59eb66a434d0" refkind="member"><highlight class="normal"><ref refid="classrepresentation_1_1Game_1aec0583c96de8be0b5b5c59eb66a434d0" kindref="member">Game::~Game</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classrepresentation_1_1Game_1a71a55fe103e2fdc3cec220d24bf95343" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1a71a55fe103e2fdc3cec220d24bf95343" kindref="member">Game::Update</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a98480615aa29a151b1bf8c03bfd4cc0e" kindref="member">Update</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>window<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world-&gt;update();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classrepresentation_1_1Game_1aee4b5192fbdfea96b67872533080fac5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1aee4b5192fbdfea96b67872533080fac5" kindref="member">Game::Render</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1afdb4b6b0be4742be7a4673ae106e6dc9" kindref="member">BeginDraw</ref>();<sp/></highlight><highlight class="comment">//<sp/>Clear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1aa34f2390947b803ad5e29c95cb69e791" kindref="member">drawBGTiles</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1aa5f23176af501fce8b510fbffc6fca9c" kindref="member">drawPlatforms</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1a0ded73c02cb88f6d0591050fc8cf487b" kindref="member">drawBonusses</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1ae754be8869dc1dd1336f81e256e67992" kindref="member">drawScore</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1a12fad4e83aee259670813a7673f51065" kindref="member">drawPlayer</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a8aa7f03a4e8d51f856ada4b1e8afc0d2" kindref="member">EndDraw</ref>();<sp/></highlight><highlight class="comment">//<sp/>Display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classrepresentation_1_1Game_1adccf8d0e3a0b2257eaeda34cc934ff53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1adccf8d0e3a0b2257eaeda34cc934ff53" kindref="member">Game::HandleInput</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key{};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf::Keyboard::isKeyPressed(sf::Keyboard::Left)<sp/>||<sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::Q)<sp/>||</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::A))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf::Keyboard::isKeyPressed(sf::Keyboard::Right)<sp/>||</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Keyboard::isKeyPressed(sf::Keyboard::D))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world-&gt;receiveInput(key);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" refkind="member"><highlight class="normal"><ref refid="classrepresentation_1_1Window" kindref="compound">Window</ref>&amp;<sp/><ref refid="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" kindref="member">Game::GetWindow</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>representation::Window::Instance();<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classrepresentation_1_1Game_1ab2257f0707b7c49d7c48ecf8c8fd1580" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1ab2257f0707b7c49d7c48ecf8c8fd1580" kindref="member">Game::runGameLoop</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1ad8f5d32a839f06eaf5e6532a7b939415" kindref="member">loadFonts</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1ac8d745da320414774a6d06a6da05299e" kindref="member">createTexts</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" kindref="member">GetWindow</ref>().IsDone())<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a98480615aa29a151b1bf8c03bfd4cc0e" kindref="member">Update</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>window<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameState<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1abb2e64d484ca4e81e8f74505b5dfd2b9" kindref="member">playMenu</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1a99a4bb7b3e86e94fd35193ead50b9b15" kindref="member">playGame</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>add<sp/>more<sp/>gameStates<sp/>if<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classrepresentation_1_1Game_1abb2e64d484ca4e81e8f74505b5dfd2b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1abb2e64d484ca4e81e8f74505b5dfd2b9" kindref="member">Game::playMenu</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf::Keyboard::isKeyPressed(sf::Keyboard::Enter))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameState<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1afdb4b6b0be4742be7a4673ae106e6dc9" kindref="member">BeginDraw</ref>();<sp/></highlight><highlight class="comment">//<sp/>Clear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(menuText);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(menuText0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>currentScore;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentScore<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentScore<sp/>+=<sp/>std::to_string(_currentScore);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentHighScore.setString(currentScore);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>AllTimeHighScore;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllTimeHighScore<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;All-Time<sp/>High-Score<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllTimeHighScore<sp/>+=<sp/>std::to_string(_allTimeHighScore);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTimeHighScore.setString(AllTimeHighScore);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(allTimeHighScore);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(currentHighScore);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a8aa7f03a4e8d51f856ada4b1e8afc0d2" kindref="member">EndDraw</ref>();<sp/></highlight><highlight class="comment">//<sp/>Display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classrepresentation_1_1Game_1a99a4bb7b3e86e94fd35193ead50b9b15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1a99a4bb7b3e86e94fd35193ead50b9b15" kindref="member">Game::playGame</ref>()</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cFactory<sp/>=<sp/>std::move(std::make_shared&lt;representation::ConcreteFactory&gt;());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factory<sp/>=<sp/>cFactory;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world<sp/>=<sp/>std::move(std::make_unique&lt;logic::World&gt;(factory));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic::utility::Stopwatch::Instance().<ref refid="classlogic_1_1utility_1_1Stopwatch_1ac297718829acfbd89ab809952708111e" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(world-&gt;gameOver<sp/>||<sp/><ref refid="classrepresentation_1_1Game_1a065d151fc9f30b6c732d4ebf10e19b7e" kindref="member">GetWindow</ref>().IsDone()))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic::utility::Stopwatch::Instance().<ref refid="classlogic_1_1utility_1_1Stopwatch_1a5a119ec7cac51cccf73a2d0b3c1a0808" kindref="member">tick</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logic::utility::Stopwatch::Instance().getDeltaTime()<sp/>&lt;<sp/>(1.0f<sp/>/<sp/><ref refid="classrepresentation_1_1Game_1a46c53a159c1075e06f72efacfaa7da10" kindref="member">getFrameRate</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::milliseconds<sp/>ms<sp/>=<sp/>std::chrono::milliseconds(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((1.0f<sp/>/<sp/><ref refid="classrepresentation_1_1Game_1a46c53a159c1075e06f72efacfaa7da10" kindref="member">getFrameRate</ref>())<sp/>-<sp/>logic::utility::Stopwatch::Instance().getDeltaTime())<sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(ms);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic::utility::Stopwatch::Instance().<ref refid="classlogic_1_1utility_1_1Stopwatch_1a5a119ec7cac51cccf73a2d0b3c1a0808" kindref="member">tick</ref>();<sp/></highlight><highlight class="comment">//<sp/>de<sp/>verstreken<sp/>milliseconden<sp/>erbij.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>1<sp/>/<sp/>logic::utility::Stopwatch::Instance().getDeltaTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic::utility::Stopwatch::Instance().<ref refid="classlogic_1_1utility_1_1Stopwatch_1ac297718829acfbd89ab809952708111e" kindref="member">Reset</ref>();<sp/></highlight><highlight class="comment">//<sp/>mStartTime<sp/>=<sp/>now<sp/>(tijd<sp/>verstreken<sp/>is<sp/>terug<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Game<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adccf8d0e3a0b2257eaeda34cc934ff53" kindref="member">HandleInput</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1a71a55fe103e2fdc3cec220d24bf95343" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1aee4b5192fbdfea96b67872533080fac5" kindref="member">Render</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameState<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1afdd28c211aa02574bb5ed16384f56c1b" kindref="member">calculateHighScore</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classrepresentation_1_1Game_1ad8f5d32a839f06eaf5e6532a7b939415" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1ad8f5d32a839f06eaf5e6532a7b939415" kindref="member">Game::loadFonts</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font1.loadFromFile(fontFile))<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classLoadFileException" kindref="compound">LoadFileException</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>from<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classLoadFileException" kindref="compound">LoadFileException</ref>&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontFile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classrepresentation_1_1Game_1ac8d745da320414774a6d06a6da05299e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1ac8d745da320414774a6d06a6da05299e" kindref="member">Game::createTexts</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">createSingleText</ref>(scoreText,<sp/>font1,<sp/>60,<sp/>sf::Color::Red,<sp/>sf::Color::Yellow,<sp/>4,<sp/>std::make_pair(0,<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">createSingleText</ref>(menuText,<sp/>font1,<sp/>20,<sp/>sf::Color::Red,<sp/>sf::Color::Yellow,<sp/>3,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(150.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)representation::Window::Instance().GetWindowSize().y<sp/>/<sp/>3),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Press<sp/>Enter<sp/>to<sp/>start<sp/>the<sp/>game.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">createSingleText</ref>(menuText0,<sp/>font1,<sp/>80,<sp/>sf::Color::Green,<sp/>sf::Color::Yellow,<sp/>1,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(70.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)representation::Window::Instance().GetWindowSize().y<sp/>/<sp/>8),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Doodle<sp/>Jump&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">createSingleText</ref>(currentHighScore,<sp/>font1,<sp/>40,<sp/>sf::Color::Blue,<sp/>sf::Color::Green,<sp/>2,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(60.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)representation::Window::Instance().GetWindowSize().y<sp/>/<sp/>1.5f),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">createSingleText</ref>(allTimeHighScore,<sp/>font1,<sp/>40,<sp/>sf::Color::Blue,<sp/>sf::Color::Red,<sp/>2,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(60.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)representation::Window::Instance().GetWindowSize().y<sp/>/<sp/>1.3f),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">Game::createSingleText</ref>(sf::Text&amp;<sp/>_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Font&amp;<sp/>_font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charSize,<sp/>sf::Color<sp/>fillColor,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Color<sp/>outlineColor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>outlineThickness,<sp/>std::pair&lt;float,<sp/>float&gt;<sp/>pos,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setFont(_font);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setCharacterSize(charSize);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setFillColor(fillColor);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setOutlineColor(outlineColor);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setOutlineThickness(outlineThickness);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setPosition(pos.first,<sp/>pos.second);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty())<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setString(str);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classrepresentation_1_1Game_1a6fcf39bf44601ac3bff978ea29428243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1adfc3b43a87a2ebb78d39daed0360606d" kindref="member">Game::createSingleText</ref>(sf::Text&amp;<sp/>_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Font&amp;<sp/>_font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charSize,<sp/>std::pair&lt;float,<sp/>float&gt;<sp/>pos,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setFont(_font);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setCharacterSize(charSize);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setPosition(pos.first,<sp/>pos.second);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.empty())<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_text.setString(str);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classrepresentation_1_1Game_1afdd28c211aa02574bb5ed16384f56c1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1afdd28c211aa02574bb5ed16384f56c1b" kindref="member">Game::calculateHighScore</ref>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currentScore<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::round(world-&gt;score-&gt;getScore()<sp/>*<sp/>10));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_currentScore<sp/>&gt;<sp/>_allTimeHighScore)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allTimeHighScore<sp/>=<sp/>_currentScore;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classrepresentation_1_1Game_1aa34f2390947b803ad5e29c95cb69e791" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1aa34f2390947b803ad5e29c95cb69e791" kindref="member">Game::drawBGTiles</ref>()</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cFactory-&gt;bgTilesViews.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(cFactory-&gt;bgTilesViews[i]-&gt;getSprite());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classrepresentation_1_1Game_1aa5f23176af501fce8b510fbffc6fca9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1aa5f23176af501fce8b510fbffc6fca9c" kindref="member">Game::drawPlatforms</ref>()</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cFactory-&gt;platformViews.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cFactory-&gt;platformViews[i].use_count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cFactory-&gt;platformViews.erase(cFactory-&gt;platformViews.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(cFactory-&gt;platformViews[i]-&gt;getSprite());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classrepresentation_1_1Game_1a0ded73c02cb88f6d0591050fc8cf487b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1a0ded73c02cb88f6d0591050fc8cf487b" kindref="member">Game::drawBonusses</ref>()</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cFactory-&gt;bonusViews.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cFactory-&gt;bonusViews[i].use_count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cFactory-&gt;bonusViews.erase(cFactory-&gt;bonusViews.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(cFactory-&gt;bonusViews[i]-&gt;getSprite());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classrepresentation_1_1Game_1ae754be8869dc1dd1336f81e256e67992" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1ae754be8869dc1dd1336f81e256e67992" kindref="member">Game::drawScore</ref>()</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scoreText.setString(std::to_string(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::round(world-&gt;score-&gt;getScore()<sp/>*<sp/>10))));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(scoreText);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classrepresentation_1_1Game_1a12fad4e83aee259670813a7673f51065" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrepresentation_1_1Game_1a12fad4e83aee259670813a7673f51065" kindref="member">Game::drawPlayer</ref>()<sp/>{<sp/>representation::Window::Instance().<ref refid="classrepresentation_1_1Window_1a91cb009a727c54df87713ec7bda3ecb1" kindref="member">Draw</ref>(cFactory-&gt;playerViews[0]-&gt;getSprite());<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/game_representation/Game.cpp"/>
  </compounddef>
</doxygen>
